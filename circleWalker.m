function outputData = circleWalker(stepSize)lowerRadius = 5;circleWidth = 2 * pi * lowerRadius;leftBound = circleWidth / 2;rightBound = -circleWidth / 2;r = circleWidth / 2;stepConstant = 0;numSubSteps = 1000;outputData.circleGrid = zeros(numSubSteps,2);stepLength = 0;angleMat = zeros(numSubSteps,1);thetaMat = zeros(numSubSteps,1);xMat = zeros(numSubSteps,1);zMat = zeros(numSubSteps,1);outputData.totalMat = zeros(numSubSteps,3);if nargin == 0    stepLength = 1;    stepConstant = 0;elseif stepSize == -1    stepConstant = 1;else    stepLength = stepSize;endfor stepper = 1:numSubSteps    if stepConstant == 1        stepLength = sdStepLength;    else    end    stepAngle = (2 * pi) * rand(1);    y = sin(stepAngle) * stepLength;    x = cos(stepAngle) * stepLength;    outputData.circleGrid(stepper + 1,1) = outputData.circleGrid(stepper,1) + x;    outputData.circleGrid(stepper + 1,2) = outputData.circleGrid(stepper,2) + y;%     if outputData.circleGrid(stepper+1,1) > leftBound%         outputData.circleGrid(stepper+1,1) = outputData.circleGrid(stepper + 1,1) - circleWidth;%         outputData.circleGrid(stepper+1,2) = outputData.circleGrid(stepper + 1,2);%     elseif  outputData.circleGrid(stepper+1,1) < rightBound%         outputData.circleGrid(stepper+1,1) = outputData.circleGrid(stepper + 1,1) + circleWidth;%         outputData.circleGrid(stepper+1,2) = outputData.circleGrid(stepper+1,2);%     else%     end    %     currX = circleGrid(stepper+1,1);    %     prevX = circleGrid(stepper,1);    angleMat(stepper,1) = leftBound - outputData.circleGrid(stepper,1);    thetaMat(stepper,1) = (angleMat(stepper,1) / circleWidth) * (2 * pi);    zMat(stepper,1) = r * sin(thetaMat(stepper,1));    xMat(stepper,1) = r * cos(thetaMat(stepper,1));    outputData.totalMat(stepper,1) = xMat(stepper,1);    outputData.totalMat(stepper,3) = zMat(stepper,1);    outputData.totalMat(stepper,2) = outputData.circleGrid(stepper,2);endsimulation2placer = uigetdir;file2name = [simulation2placer filesep 'CircleWalker 2D Sim'];file2name2 = [simulation2placer filesep 'CircleWalker 3D Sim'];filename = [simulation2placer filesep 'CircleWalker Struct'];wri2er = fopen([file2name '.csv'], 'wt');wri2er2 = fopen([file2name2 '.csv'], 'wt');if wri2er == -1    disp('File not open correctly');elseendif wri2er2 == -1    disp('File not open correctly');elseendfprintf(wri2er,'x,y\n');fprintf(wri2er, '%d,%d,\n', outputData.circleGrid');fprintf(wri2er2,'x,y,z\n');fprintf(wri2er2, '%d,%d,%d,\n', outputData.totalMat');closeresul2 = fclose(wri2er);closeresult3 = fclose(wri2er2);if closeresul2 == -1    disp('File did not close correctly');elseendif closeresult3 == -1    disp('File did not close correctly');elseendsave(filename,'-struct','outputData');end